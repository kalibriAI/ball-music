from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message

from bot.services.add import save_to_json

user_router = Router(name='user_router')


@user_router.message(Command('start'))
async def start_cmd(message: Message):
    await message.answer('üé∂<b>–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø–µ—Å–Ω—é –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏, –∏ –∞–≤—Ç–æ—Ä–∞ —Å–æ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏.</b>')


@user_router.message(Command('id'))
async def get_id_cmd(message: Message):
    await message.answer(f'ID: <code>{message.from_user.id}</code>')


@user_router.message()
async def song_handler(message: Message):
    if '\n' in message.text and len(message.text.split('\n')) == 2:
        name, author = message.text.split('\n')
        if len(name) <= 30 and len(author) <= 30:
            save_to_json({'name': name, 'author': author})
            await message.answer('<b>–ü–µ—Å–Ω—è —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!</b>‚úÖ')
        else:
            await message.answer('–ù–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏ –∏–ª–∏ –∏–º—è –∞–≤—Ç–æ—Ä–∞ –Ω–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –±–æ–ª–µ–µ 30 —Å–∏–º–≤–æ–ª–æ–≤.')
    else:
        await message.answer("–í–≤–æ–¥–∏—Ç—å –Ω—É–∂–Ω–æ —Å—Ç—Ä–æ–≥–æ –ø–æ –ø—Ä–∞–≤–∏–ª–∞–º: –≤ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏, –∏–º—è –∞–≤—Ç–æ—Ä–∞ –≤–æ –≤—Ç–æ—Ä–æ–π")

